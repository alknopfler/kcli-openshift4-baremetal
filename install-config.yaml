{% if api_ip != None and ':' in api_ip %}
{% set ipv6 = True %}
{% else %}
{% set ipv6 = False %}
{% endif %}
{% if virtual_masters %}
{% set extra_masters = [] %}
{% for num in range(0, virtual_masters_number) %}
{% do extra_masters.append({}) %}
{% endfor %}
{% set masters = extra_masters + masters %}
{% endif %}
{% if virtual_workers and virtual_workers_deploy %}
{% set extra_workers = [] %}
{% for num in range(0, virtual_workers_number) %}
{% do extra_workers.append({}) %}
{% endfor %}
{% set workers = extra_workers + workers %}
{% endif %}
apiVersion: v1
{% if fips %}
fips: True
{% endif %}
baseDomain: {{ domain }}
networking:
  networkType: {{ network_type }}
  machineCIDR: {{ baremetal_cidr }}
  clusterNetworks:
{% if ipv6 %}
  - cidr: fd01::/48
    hostPrefix: 64
  serviceNetwork:
  - fd02::/112
{% else %}
  - cidr: 10.132.0.0/14
    hostPrefix: 23
  serviceNetwork:
  - 172.30.0.0/16
{% endif %}
metadata:
  name: {{ cluster }}
compute:
- name: worker
  replicas: {{ workers|length }}
controlPlane:
  name: master
  replicas: {{ masters|length }}
platform:
  baremetal:
    apiVIP: {{ api_ip }}
{% if dns_ip != None %}
    dnsVIP: {{ dns_ip }}
{% endif %}
    ingressVIP: {{ ingress_ip }}
{% if not provisioning_enable %}
    provisioningNetwork: "Disabled"
{% if baremetal_noprovisioning_ip != None %}
    provisioningHostIP: {{ baremetal_noprovisioning_ip }}
{% endif %}
{% if baremetal_noprovisioning_bootstrap_ip != None %}
    bootstrapProvisioningIP: {{ baremetal_noprovisioning_bootstrap_ip }}
{% endif %}
{% else %}
    provisioningBridge: {{ provisioning_net }}
{% if virtual_masters %}
    provisioningNetworkInterface: {{ 'enp1s0' if virtual_protocol == 'redfish' else 'ens3' }}
{% else %}
   provisioningNetworkInterface: {{ provisioning_interface }}
{% endif %}
{% endif %}
    externalBridge: {{ baremetal_net }}
    libvirtURI: qemu+ssh://{{ 'root' if config_user == 'apache' else config_user }}@{{ config_host|default(baremetal_net|local_ip) }}/system
    hosts:
{% for master in masters %}
{% set num = loop.index0|string %}
    - name: {{ cluster }}-master-{{ num }}
      role: master
      bmc:
        {% if 'redfish_address' in master %}
        {% if 'redfish' in master['redfish_address'] or 'idrac' in master['redfish_address'] %}
        address: {{ master['redfish_address'] }}
        {% elif master['model']|default(model) == 'hpe' %}
        address: redfish-virtualmedia://{{ master['redfish_address'] }}/redfish/v1/Systems/1
        {% else %}
        address: redfish-virtualmedia://{{ master['redfish_address'] }}/redfish/v1/Systems/System.Embedded.1
        {% endif %}
        disableCertificateVerification: True
        {% else %}
        address: ipmi://{{ master['ipmi_address'] | default('DONTCHANGEME:623' + num)}}
        {% endif %}
        username: {{ ipmi_user }}
        password: {{ ipmi_password }}
      bootMACAddress: {{ master['provisioning_mac'] | default(virtual_masters_mac_prefix + ":" + "%02.d" | format(num|int + 1)| string) }}
      {% if 'disk' in master %}
      rootDeviceHints:
        deviceName: "/dev/{{ master['disk'] | basename }}"
      {% endif %}
{% endfor %}
{% for worker in workers %}
{% set num = loop.index0|string %}
    - name: {{ cluster }}-worker-{{ num }}
      role: worker
      bmc:
        {% if 'redfish_address' in worker %}
        {% if 'redfish' in worker['redfish_address'] or 'idrac' in worker['redfish_address'] %}
        address: {{ worker['redfish_address'] }}
        {% elif worker['model']|default(model) == 'hpe' %}
        address: redfish-virtualmedia://{{ worker['redfish_address'] }}/redfish/v1/Systems/1
        {% else %}
        address: redfish-virtualmedia://{{ worker['redfish_address'] }}/redfish/v1/Systems/System.Embedded.1
        {% endif %}
        disableCertificateVerification: True
        {% else %}
        address: ipmi://{{ worker['ipmi_address'] | default('DONTCHANGEME:624' + num)}}
        {% endif %}
        username: {{ ipmi_user }}
        password: {{ ipmi_password }}
      bootMACAddress: {{ worker['provisioning_mac'] | default(virtual_workers_mac_prefix + ":" + "%02.d" | format(num|int + 1)| string) }}
      hardwareProfile: unknown
      {% if 'disk' in worker %}
      rootDeviceHints:
        deviceName: "/dev/{{ worker['disk'] | basename }}"
      {% endif %}
{% endfor %}
{% if cas is defined %}
additionalTrustBundle: |
{% for ca in cas %}
 {{ ca | certificate | replace('\n', '\n ') }}
{% endfor %}
{% endif %}
{% if disconnected_url is defined %}
imageContentSources:
- mirrors:
  - {{ disconnected_url }}/ocp/release
  source: quay.io/openshift-release-dev/ocp-v4.0-art-dev
- mirrors:
  - {{ disconnected_url }}/ocp/release
  source: registry.ci.openshift.org/ocp/release
{% elif imagecontentsources %}
imageContentSources:
{% for source in imagecontentsources %}
- mirrors:
  - {{ source }}
  source: image-registry.openshift-image-registry.svc:5000/openshift/{{ source | basename | replace("openshift-", "")}}
{% endfor %}
{% endif %}
